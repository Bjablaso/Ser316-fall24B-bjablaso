

plugins {
    id "com.github.spotbugs" version "5.0.13"
    id "checkstyle"
    id 'application'
}

//apply plugin: 'application'

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0'
    implementation files('cls/')
}

mainClassName = 'Main'

test {
    useJUnitPlatform()
    exclude '**/BlackBoxTest.class'  // Exclude the BlackBoxTest class
}




//apply plugin: 'checkstyle'
checkstyle {
    // Configure Checkstyle settings
    ignoreFailures = true   // Ignore errors, just log warnings
    showViolations = false  // Suppress violation reports in the build output
    configFile = file('config/checkstyle/checkstyle.xml')  // Specify the path to the Checkstyle XML file
    toolVersion = "8.8"
}

tasks.withType(Checkstyle).configureEach {
    reports {
        xml.required.set(false)   // Use `required.set(true)` instead of `enabled = true`
        html.required.set(true)  // Updated syntax for Gradle 9
    }
}

//apply plugin: 'com.github.spotbugs' version '5.1.6'
//apply plugin: 'com.github.spotbugs'

///////////////////////////////////////////////////////////////////////
// Configure SpotBugs
///////////////////////////////////////////////////////////////////////
// To generate an HTML report instead of XML
spotbugs {
    toolVersion = '4.8.4'
    ignoreFailures = true
    showProgress = true
    effort = 'max'
    reportLevel = 'low'
}

tasks.withType(com.github.spotbugs.snom.SpotBugsTask).configureEach {
    reports {
        html.required.set(true)
        xml.required.set(false)
    }
}


tasks.withType(JavaCompile) {
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

